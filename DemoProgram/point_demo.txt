///////////////////////////////////////
//Point Manipulation Demo
///////////////////////////////////////
_RESET      J       _CLR_REG
            RMVALL
            FILL    0x7
            J       _DRAW
            LDU     R20 0x00 // object register
            LDL     R20 0x00

            J       _Main

/////////////////////////////
//Zero out all registers
/////////////////////////////
_CLR_REG    LDU     R0  0x00
            LDL     R0  0x00
            MOV     R1  R0
            MOV     R2  R0
            MOV     R3  R0
            MOV     R4  R0
            MOV     R5  R0
            MOV     R6  R0
            MOV     R7  R0
            MOV     R8  R0
            MOV     R9  R0
            MOV     R10 R0
            MOV     R11 R0
            MOV     R12 R0
            MOV     R13 R0
            MOV     R14 R0
            MOV     R15 R0
            MOV     R16 R0
            MOV     R17 R0
            MOV     R18 R0
            MOV     R19 R0
            MOV     R20 R0
            MOV     R21 R0
            MOV     FS  R0
            MOV     RO  R0
            MOV     V0  R0
            MOV     V1  R0
            MOV     V2  R0
            MOV     V3  R0
            MOV     V4  R0
            MOV     V5  R0
            MOV     V6  R0
            MOV     V7  R0
			
			JR R16

/////////////////////////////
//OBJ INIT
/////////////////////////////
_DRAW       LDU     R0  du100 //triangle init
            LDL     R0  dl100
            LDU     R1  du50
            LDL     R1  dl50
            LDU     R2  du150
            LDL     R2  dl150
            LDU     R3  du25
            LDL     R3  dl25
            MOV     V0  R0
            MOV     V1  R1
            MOV     V2  R2
            MOV     V3  R0
            MOV     V4  R3
            MOV     V5  R2
            DTRI    0x1 0x7      //White

            LDU     R0  du200 //square init
            LDL     R0  dl200
            LDU     R1  du250
            LDL     R1  dl250
            LDU     R2  du300
            LDL     R2  dl300
            LDU     R3  du400
            LDL     R3  dl400
            MOV     V0  R0
            MOV     V1  R1
            MOV     V2  R2
            MOV     V3  R1
            MOV     V4  R2
            MOV     V5  R3
            MOV     V6  R0
            MOV     V7  R3
            DPOLY   0x1 0x0         // Black
			MOV     R19 RO          //R19 holds reference to the square
			
			JR R16
			
/////////////////////////////
//Main Program
/////////////////////////////
_Main       LDU R1 0x00       //reset point masks
			LDL R1 0x01
			
			LDU R2 0x00
			LDL R2 0x02
			
			LDU R3 0x00
			LDL R3 0x03
			
			LDU R4 0x00
			LDL R4 0x04

			LDU R7 _y
			LDL R7 _y
			LDR R18 R7
			AND R18 FS
			BNE _Point1 //set point 1 active if 'y' pressed
			
			LDU R7 _u
			LDL R7 _u
			LDR R18 R7
			AND R18 FS
			BNE _Point2 //set point 2 active if 'u' pressed
			
			LDU R7 _i
			LDL R7 _i
			LDR R18 R7
			AND R18 FS
			BNE _Point3 //set point 3 active if 'i' pressed
			
			LDU R7 _o
			LDL R7 _o
			LDR R18 R7
			AND R18 FS
			BNE _Point4 //set point 4 active if 'o' pressed
			
			LDU R7 _w
			LDL R7 _w
			LDR R18 R7
			AND R18 FS
			BNE _MoveUp //move the obj up if 'w' pressed
			
			LDU R7 _s
			LDL R7 _s
			LDR R18 R7
			AND R18 FS
			BNE _MoveDown //move the obj up if 's' pressed
			
			LDU R7 _d
			LDL R7 _d
			LDR R18 R7
			AND R18 FS
			BNE _MoveRight //move the obj up if 'd' pressed
			
			LDU R7 _a
			LDL R7 _a
			LDR R18 R7
			AND R18 FS
			BNE _MoveLeft //move the obj up if 'a' pressed
			
			LDU R7 _space
			LDL R7 _space
			LDR R18 R7
			AND R18 FS
			BNE _RESET //reset the screen if 'space' pressed
			
			B _Main
			
_Point1     MOV R9 R0
			B _Main
			
_Point2     MOV R9 R1
			B _Main
			
_Point3     MOV R9 R2
			B _Main
			
_Point4     MOV R9 R3
			B _Main
			
_MoveUp     LDU R0 0x00 //Moves object up and returns to main
			LDL R0 0x01
			MOV V1 R0
			AND R1 R9
			BEQ _R2U
			TRN R19 0x02 0x00
			WAIT dp50
			B _Main
			
_R2U        AND R2 R9
			BNE _R3U
			TRN R19 0x02 0x01
			WAIT dp50
			B _Main
			
_R3U        AND R3 R9
			BNE _R4U
			TRN R19 0x02 0x03
			WAIT dp50
			B _Main
			
_R4U        AND R4 R9
			TRN R19 0x02 0x04
			WAIT dp50
            B _Main

_MoveDown   LDU R0 0xFF //Moves object up and returns to main
			LDL R0 0xFF
			MOV V1 R0
			AND R1 R9
			BNE _R2D
			TRN R19 0x02 0x00
			WAIT dp50
			B _Main
			
_R2D        AND R2 R9
			BNE _R3D
			TRN R19 0x02 0x01
			WAIT dp50
			B _Main
			
_R3D        AND R3 R9
			BNE _R4D
			TRN R19 0x02 0x03
			WAIT dp50
			B _Main
			
_R4D        AND R4 R9
			TRN R19 0x02 0x04
			WAIT dp50
            B _Main

_MoveRight  LDU R0 0x00 //Moves object up and returns to main
			LDL R0 0x01
			MOV V1 R0
			AND R1 R9
			BNE _R2R
			TRN R19 0x01 0x00
			WAIT dp50
			B _Main
			
_R2R        AND R2 R9
			BNE _R3D
			TRN R19 0x01 0x01
			WAIT dp50
			B _Main
			
_R3R        AND R3 R9
			BNE _R4D
			TRN R19 0x01 0x03
			WAIT dp50
			B _Main
			
_R4R        AND R4 R9
			TRN R19 0x01 0x04
			WAIT dp50
            B _Main

_MoveLeft   LDU R0 0xFF //Moves object up and returns to main
			LDL R0 0xFF
			MOV V1 R0
			AND R1 R9
			BNE _R2L
			TRN R19 0x02 0x00
			WAIT dp50
			B _Main
			
_R2L        AND R2 R9
			BNE _R3L
			TRN R19 0x02 0x01
			WAIT dp50
			B _Main
			
_R3L        AND R3 R9
			BNE _R4L
			TRN R19 0x02 0x03
			WAIT dp50
			B _Main
			
_R4L        AND R4 R9
			TRN R19 0x02 0x04
			WAIT dp50
            B _Main
			
/////////////////////////////			
//Memory Sector
/////////////////////////////
_space      .FILL       0x8000  // space    // reset
_l          .FILL       0x4000  // l        // ?
_k          .FILL       0x2000  // k        // ?
_j          .FILL       0x1000  // j        // ?
_h          .FILL       0x0800  // h        // ?
_o          .FILL       0x0400  // o        // change to point 4
_i          .FILL       0x0200  // i        // change to point 3
_u          .FILL       0x0100  // u        // change to point 2
_y          .FILL       0x0080  // y        // change to point 1
_d          .FILL       0x0040  // d        // go right
_s          .FILL       0x0020  // s        // go down
_a          .FILL       0x0010  // a        // go left
_w          .FILL       0x0008  // w        // go up