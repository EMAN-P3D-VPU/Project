//TESTS COORDINATE GENERATION IN QUADRANT 1 AND 2
module point_gen_TB ();

reg clk, rst;
reg [58:0] CAP_REG;

//regs to contain all line info
//Y = mX (+b)
reg [9:0] x0, y0, x1, y1, d0, d1, Yf, Xf;
reg [9:0] rDX, rDY;
reg signed [10:0] slope;

assign rDX = x1 - x0;
assign rDY = y1 - y0;
assign slope = rDY/rDS;
assign Yf = Xf * slope;
assign d0 = (y0 + 1) - Yf;
assign d1 = Yf - y0;

point_gen POINT_GEN(.x_i(CAP_REG[58:49]), .x_y(CAP_REG[48:39]), .dy(CAP_REG[17:7]), .p_or_n(CAP_REG[0]), .Xn(new_x), .Yn(new_y));




always
  #10 clk = ~clk;

always @(posedge clk)
begin

  CAP_REG[58:49] = new_x;
  CAP_REG[48:39] = new_y;


end

initial 
begin

//begining parameters
//slope should be 1/2
  x0 = 0;
  y0 = 0;
  x1 = 100;
  y1 = 50;

  //set the cap reg to be the same values
  CAP_REG[0] = 0; //positive version
  CAP_REG[58:49] = x0;
  CAP_REG[48:39] = y0;
  CAP_REG[17:7]  = rDY;
  
    for(x0 = 0; x0 <= x1; x0++)
    begin
      //x_i + 1
      Xf = x0 + 1;
      @(posedge clk)
      begin
      
        if((d0 - d1) < 0)
        begin
          y0 = y0 + 1;
        end

        $display("[CAP REG] current x: %d, current y: %d", CAP_REG[58:49], CAP_REG[48:39]);
        $display("[GOLDEN] current x: %d, current y: %d", x0, y0);

        if((CAP_REG[58:49] != x0) || (CAP_REG[48:39] != y0))
          $display("DUT FAILED, UNEQUIVALENT POINTS GENERATED.",);

       end

    end

end

endmodule